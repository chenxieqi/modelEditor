//--------------------------------------------------------------------------------
//  タイマー
//--------------------------------------------------------------------------------

#pragma once
#include <Windows.h>

class Timer
{
public:
    //--------------------------------------------------------------------------------
    //  静的変数
    //--------------------------------------------------------------------------------
    static constexpr float c_frame_per_second = 60.0f;                  // FPS
    static constexpr float c_time_interval = 1.0f / c_frame_per_second; // 更新間隔
    
    
    Timer() :m_delta_time(0.0f) {
        memset(&m_current_time, 0x00, sizeof(m_current_time));
        memset(&m_exec_last_time, 0x00, sizeof(m_exec_last_time));
        if (m_instans == NULL)
        {
            m_instans = this;
        }
        else
        {
            delete this;
        }

    }
    ~Timer() {}
    void Release();
    //--------------------------------------------------------------------------------
    //  １フレーム更新時間チェック
    //--------------------------------------------------------------------------------
    bool CanUpdateFrame();

    //--------------------------------------------------------------------------------
    //  セッター
    //--------------------------------------------------------------------------------
    void SetBeginTime(void);
    //--------------------------------------------------------------------------------
    //  ゲッター
    //--------------------------------------------------------------------------------
    static Timer& Instance() { return *m_instans; }
    auto& GetDeltaTime(void) const{ return m_delta_time; }
    auto& GetTime(void) const{ return m_current_time; }
    //--------------------------------------------------------------------------------
    //  生成
    //--------------------------------------------------------------------------------
    static Timer* Create();
private:
    //--------------------------------------------------------------------------------
    //  メンバー変数
    //--------------------------------------------------------------------------------
    static Timer* m_instans;
    LARGE_INTEGER m_current_time;       
    LARGE_INTEGER m_exec_last_time; 
    LARGE_INTEGER m_frequency;
    float         m_delta_time;                 
};

