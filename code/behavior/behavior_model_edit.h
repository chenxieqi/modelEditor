//--------------------------------------------------------------------------------
// モデルエディター
//--------------------------------------------------------------------------------
#pragma once
#include "behavior.h"
#include "main.h"
#include <string>
#include <vector>
#include <list>

using namespace std;

class Transform;
//--------------------------------------------------------------------------------
// クラス
//--------------------------------------------------------------------------------
class BehaviorModelEdit :
    public Behavior
{
public:
    BehaviorModelEdit(GameObject* game_object) :Behavior(game_object, "ModelEdit"),
        m_show(false),
        m_current_model_number(0),
        m_show_list(false)
    {}
    ~BehaviorModelEdit();
    //--------------------------------------------------------------------------------
    // 基本関数
    //--------------------------------------------------------------------------------
    void Init()override;
    void Uninit()override;
    void Update()override;
    //--------------------------------------------------------------------------------
    // セーブ・ロード
    //--------------------------------------------------------------------------------
    void SaveAsBinary(const string& name);
    void LoadFrom(const string& name);
    //--------------------------------------------------------------------------------
    // セッター
    //--------------------------------------------------------------------------------
    void SetPosition(const D3DXVECTOR3& position);
    void SetShow(const bool& show) { m_show = show; }
    //--------------------------------------------------------------------------------
    // ゲッター
    //--------------------------------------------------------------------------------
    auto& GetShow()const { return m_show; }
private:
    //--------------------------------------------------------------------------------
    // 構造体
    //--------------------------------------------------------------------------------
    struct ModelInfo
    {
        ModelInfo():m_transform(nullptr), m_rotation(D3DXVECTOR3(0.0f,0.0f,0.0f)){}
        Transform*   m_transform;
        D3DXVECTOR3  m_rotation;
    };
    //--------------------------------------------------------------------------------
    // メンバー変数
    //--------------------------------------------------------------------------------
    bool                    m_show;
    vector<string>          m_mode_names;
    vector<ModelInfo>       m_model_infos;
    vector<list<ModelInfo>> m_created_model_infos;
    int                     m_current_model_number;
    bool                    m_show_list;
    //--------------------------------------------------------------------------------
    // 生成
    //--------------------------------------------------------------------------------
    void Create(void);
    //--------------------------------------------------------------------------------
    // ウィンドウ
    //--------------------------------------------------------------------------------
    void ShowMainWindow(void);
    void ShowTypeListBox(void);
    void ShowCreatedList(void);
    //--------------------------------------------------------------------------------
    // クリア
    //--------------------------------------------------------------------------------
    void ClearList(void);
    //--------------------------------------------------------------------------------
    // ファイル情報関数
    //--------------------------------------------------------------------------------
    string GetProjectPath(void);
    vector<string> GetFilesFromFolder(const string& path, const string& extension);
};

