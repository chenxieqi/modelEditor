//--------------------------------------------------------------------------------
// シェーダー
//--------------------------------------------------------------------------------
#pragma once
#include "main.h"
#include <string>

using namespace std;

class Renderer;
//--------------------------------------------------------------------------------
// クラス
//--------------------------------------------------------------------------------
class Shader
{
public:
    Shader();
    ~Shader();
    //--------------------------------------------------------------------------------
    // 基本関数
    //--------------------------------------------------------------------------------
    virtual void Init() = 0;
    void Uninit();
    //--------------------------------------------------------------------------------
    // セット
    //--------------------------------------------------------------------------------
    virtual void Set();
    virtual void Reset() = 0;
    virtual void SetConstantTable(const Renderer& renderer) = 0;

protected:
    //--------------------------------------------------------------------------------
    // コンパイル
    //--------------------------------------------------------------------------------
    void CompileShaderFrom(const string& vertex_Shader,const string& pixel_shader);
    //--------------------------------------------------------------------------------
    // メンバー変数
    //--------------------------------------------------------------------------------
    LPDIRECT3DVERTEXSHADER9 m_vertex_shader;
    LPD3DXCONSTANTTABLE     m_vs_const_table;
    LPDIRECT3DPIXELSHADER9  m_pixel_shader;
    LPD3DXCONSTANTTABLE     m_ps_const_table;
};

