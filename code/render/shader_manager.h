//--------------------------------------------------------------------------------
// シェーダーマネージャー
//--------------------------------------------------------------------------------
#pragma once

class Shader;
class Renderer;
//--------------------------------------------------------------------------------
// 構造体
//--------------------------------------------------------------------------------
enum SHADER_TYPE
{
    SHADER_DEFAULT=0,
    SHADER_2D,
    SHADER_MAX
};
//--------------------------------------------------------------------------------
// クラス
//--------------------------------------------------------------------------------
class ShaderManager
{
public:
    ShaderManager();
    ~ShaderManager();
    //--------------------------------------------------------------------------------
    // 基本関数
    //--------------------------------------------------------------------------------
    void Init();
    void Uninit();
    void Update();
    //--------------------------------------------------------------------------------
    // セットシェーダー情報
    //--------------------------------------------------------------------------------
    void Set(SHADER_TYPE& shader_type);
    void Reset(SHADER_TYPE& shader_type);
    void SetConstantTable(SHADER_TYPE& shader_type, const Renderer& renderer);
    //--------------------------------------------------------------------------------
    // 生成
    //--------------------------------------------------------------------------------
    static ShaderManager* Create();
private:
    //--------------------------------------------------------------------------------
    // メンバー変数
    //--------------------------------------------------------------------------------
    Shader * m_shaders[SHADER_MAX];
};

