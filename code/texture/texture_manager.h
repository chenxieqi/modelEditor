//--------------------------------------------------------------------------------
// テクスチャマネージャー
//--------------------------------------------------------------------------------
#pragma once
#include <string>
#include <unordered_map>
#include "main.h"

using namespace std;

//--------------------------------------------------------------------------------
// クラス
//--------------------------------------------------------------------------------
class TextureManager
{
public:
    TextureManager();
    ~TextureManager();
    //--------------------------------------------------------------------------------
    // 基本関数
    //--------------------------------------------------------------------------------
    void Init();
    void Uninit();
    void Update();
    //--------------------------------------------------------------------------------
    // 使う・破棄
    //--------------------------------------------------------------------------------
    void Use(const string& texture_name);
    void DisUse(const string& texture_name);
    //--------------------------------------------------------------------------------
    // ゲッター
    //--------------------------------------------------------------------------------
    LPDIRECT3DTEXTURE9 GetTexture(const string& texture_name) const;
    //--------------------------------------------------------------------------------
    // 生成
    //--------------------------------------------------------------------------------
    static TextureManager* Create();
private:
    //--------------------------------------------------------------------------------
    // 構造体
    //--------------------------------------------------------------------------------
    struct TextureInfo
    {
        TextureInfo() :m_texture_number(1), m_texture(nullptr){}
        ~TextureInfo() {}
        int m_texture_number;
        LPDIRECT3DTEXTURE9 m_texture;
    };
    //--------------------------------------------------------------------------------
    // メンバー変数
    //--------------------------------------------------------------------------------
    unordered_map<size_t, TextureInfo> m_textures;

};
