//--------------------------------------------------------------------------------
//  物理システム
//--------------------------------------------------------------------------------
#pragma once

#include <queue>

class Collision;

using namespace std;
//--------------------------------------------------------------------------------
//  クラス
//--------------------------------------------------------------------------------
class PhysicsSystem
{
public:
    PhysicsSystem();
    ~PhysicsSystem();
    //--------------------------------------------------------------------------------
    //  基本関数
    //--------------------------------------------------------------------------------
    void Init();
    void Uninit();
    void Update();
    //--------------------------------------------------------------------------------
    //  登録
    //--------------------------------------------------------------------------------
    void Register(Collision* collision);
    //--------------------------------------------------------------------------------
    //  クリア
    //--------------------------------------------------------------------------------
    void Clear(void);
    //--------------------------------------------------------------------------------
    //  生成
    //--------------------------------------------------------------------------------
    static PhysicsSystem* Create();
private:
    //--------------------------------------------------------------------------------
    //  メンバー変数
    //--------------------------------------------------------------------------------
    queue<Collision*> m_collisions;

    //--------------------------------------------------------------------------------
    //  計算関数
    //--------------------------------------------------------------------------------
    // 衝突問題解決
    void Resolve(Collision& collision);
    // 衝突速度計算
    void ResolveVelocity(Collision& collision);
    // 衝突位置解決
    void ResolveInterpenetration(Collision& collision);
    // 衝突分離速度計算
    float CalculateSeparatingVelocity(Collision& collision);
};

