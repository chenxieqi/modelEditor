//--------------------------------------------------------------------------------
// カメラマネージャー
//--------------------------------------------------------------------------------

#pragma once

#include <list>

class Camera;

using namespace std;

//--------------------------------------------------------------------------------
// クラス
//--------------------------------------------------------------------------------

class CameraManager
{
public:
    CameraManager();
    ~CameraManager();
    //--------------------------------------------------------------------------------
    // 基本関数
    //--------------------------------------------------------------------------------
    void Init();
    void Update();
    void LateUpdate();
    void Release();
    //--------------------------------------------------------------------------------
    // クリア
    //--------------------------------------------------------------------------------
    void Clear();
    //--------------------------------------------------------------------------------
    // ゲッター
    //--------------------------------------------------------------------------------
    Camera* GetMainCamera() { return m_cameras.front(); }
    //--------------------------------------------------------------------------------
    // 登録
    //--------------------------------------------------------------------------------
    void RegisterAsMain(Camera* camera) { m_cameras.push_front(camera); }
    //--------------------------------------------------------------------------------
    // 生成
    //--------------------------------------------------------------------------------
    static CameraManager* Create();

private:
    //--------------------------------------------------------------------------------
    // メンバー変数
    //--------------------------------------------------------------------------------
    list<Camera*> m_cameras;
};

